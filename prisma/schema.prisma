// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  phone         String?
  app           App?
  accounts      Account[]
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String   @unique
  token      String
  expires    DateTime

  @@id([identifier])
}

model App {
  id          String    @id @default(uuid())
  userId      String    @unique
  user        User      @relation(fields: [userId], references: [id])
  name        String
  products    Product[]
  preferences Json
  Category    Category? @relation("AppCategory", fields: [categoryId], references: [id])
  categoryId  String?
}

model Product {
  id            String       @id @default(uuid())
  name          String
  description   String?
  price         Float
  stock         Int
  recommended   Boolean
  categoryId    String
  category      Category     @relation(fields: [categoryId], references: [id])
  subcategoryId String?
  subcategory   Subcategory? @relation(fields: [subcategoryId], references: [id])
  App           App?         @relation(fields: [appId], references: [id])
  appId         String?
}

model Category {
  id            String        @id @default(uuid())
  name          String
  image         String?
  subcategories Subcategory[]
  products      Product[]
  apps          App[]         @relation("AppCategory")
}

model Subcategory {
  id         String    @id @default(uuid())
  name       String
  categoryId String
  category   Category  @relation(fields: [categoryId], references: [id])
  products   Product[]
}
